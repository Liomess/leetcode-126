from collections import deque
class Solution:
    def findSequences(self, start, target, word):
		n=len(start)
		s=set(word)
		q=deque()
		q.append([start])
		used=[]
		used.append(start)
		level=0
		ans=[]
		while q:
		    arr=q.popleft()
		    if len(arr)>level:
		        level+=1
		        for val in used:
		            s.discard(val)
		        used.clear()
		    node=arr[-1]
		    if node==target:
		        if len(ans)==0:
		            ans.append(arr)
		        elif len(ans[0])==len(arr):
		            ans.append(arr)
		    for i in range(n):
		        org=node[i]
		        for j in range(26):
    		        node=list(map(lambda x:x,node))
    		        ch=chr(97+j)
    		        node[i]=ch
    		        st=""
    		        node=st.join(node)
    		        if node in s:
        		        arr.append(node)
        		        used.append(node)
        		        q.append(arr)
        		        arr.pop()
    		    node=list(map(lambda x:x,node))
    		    node[i]=org
    		    st=""
    		    node=st.join(node)
    	return ans
